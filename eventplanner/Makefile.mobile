# Install npm, then sudo npm install -g cordova
# For Android:
# - install JDK 7 or higher (openjdk-7-jdk in Debian)
# - install qemu-kvm
# - Download Android SDK http://developer.android.com/sdk
# - Untar
# - Run tools/android
# - Install SDK platform tools and SDK build tools (last versions)
# - Install Android API 23 : SDK platform and a x86-64 system image
# - Install Extra/android support repository
# - Add directories platform-tools and tools to your PATH
# - Configure an emulator: tools/Manage AVDs/Device definition (e.g.,
# Nexus 6 no skin)
#
# If Android emulator take 100 CPU, try:
# hw.audioInput=no
# hw.audioOutput=no
# in ~/.android/avd/<your avd>/config.ini

CORDOVAPATH := cordova
MOBILESTATICPATH := mobile
WWW_PATH := local/var/www/$(PROJECT_NAME)

mobile-all: mobile-create android browser # ios

.PHONY: assets mobile-create

mobile-create: $(CORDOVAPATH) assets $(CORDOVAPATH)/www/index.html

$(CORDOVAPATH):
	cordova create $(CORDOVAPATH) com.eventplanner.mobile Eventplanner
	cd $(CORDOVAPATH) ;\
	cordova platforms add android ;\
	cordova platforms add ios ;\
	cordova platforms add windows ;\
	cordova platforms add browser --usegit ;\
	cordova plugin add cordova-hot-code-push-plugin
	rm -f $(CORDOVAPATH)/www/index.html
	rm -f $(CORDOVAPATH)/config.xml
	rm -rf $(CORDOVAPATH)/www/img

assets:  $(CORDOVAPATH) $(CORDOVAPATH)/www/index.html \
	 $(CORDOVAPATH)/www/eliom.html \
	 $(WWW_PATH)/$(PROJECT_NAME).js \
	 $(CORDOVAPATH)/www/eliom_loader.js \
	 $(CORDOVAPATH)/config.xml \
	 $(CORDOVAPATH)/www/chcp.manifest
	cp -f $(MOBILESTATICPATH)/.chcpignore $(CORDOVAPATH)/
	cp -f $(LOCAL_STATIC)/css/*.css $(CORDOVAPATH)/www/css/
	cp -f $(LOCAL_STATIC)/js/*.js $(CORDOVAPATH)/www/js/
	mkdir -p $(CORDOVAPATH)/www/fonts/
	cp -f $(LOCAL_STATIC)/fonts/* $(CORDOVAPATH)/www/fonts/
	rm -rf $(WWW_PATH)/update
	cp -rf $(CORDOVAPATH)/www $(WWW_PATH)/update

$(CORDOVAPATH)/www/chcp.manifest: $(CORDOVAPATH) $(JS_PREFIX).js
	cp -f $(JS_PREFIX).js $(CORDOVAPATH)/www/
	cd $(CORDOVAPATH) ; cordova-hcp build
	sed s,%%APPSERVER%%,$(APP_SERVER),g mobile/chcp.json.in | \
	sed s,%%DATE%%,$(shell date +%y%m%d-%H%M%S),g > \
	$(CORDOVAPATH)/www/chcp.json

$(CORDOVAPATH)/config.xml: mobile/config.xml.in
	sed s,%%APPSERVER%%,$(APP_SERVER),g $< > $@

$(CORDOVAPATH)/www/index.html: $(CORDOVAPATH) $(JS_PREFIX).js mobile/index.html.in
	sed s/%%APPNAME%%/$(shell echo `basename $(JS_PREFIX).js .js`_`md5sum $(JS_PREFIX).js | cut -d ' ' -f 1`)/g mobile/index.html.in | \
	sed s,%%APPSERVER%%,$(APP_SERVER),g > \
	$(CORDOVAPATH)/www/index.html

$(CORDOVAPATH)/www/eliom.html: $(CORDOVAPATH) $(JS_PREFIX).js mobile/eliom.html.in
	sed s/%%APPNAME%%/$(shell echo `basename $(JS_PREFIX).js .js`_`md5sum $(JS_PREFIX).js | cut -d ' ' -f 1`)/g mobile/eliom.html.in | \
	sed s/%%APPNAME_NO_HASH%%/$(shell basename $(JS_PREFIX).js .js)/g | \
	sed s,%%APPSERVER%%,$(APP_SERVER),g > \
	$(CORDOVAPATH)/www/eliom.html

scripts/eliom_loader.byte: scripts/eliom_loader.ml
	ocamlfind ocamlc \
	    -package js_of_ocaml,js_of_ocaml.ppx,lwt.ppx \
	    -linkpkg -o scripts/eliom_loader.byte \
	    $<

$(CORDOVAPATH)/www/eliom_loader.js: scripts/eliom_loader.byte
	js_of_ocaml $< -o $(CORDOVAPATH)/www/eliom_loader.js

android: $(CORDOVAPATH) mobile-create
	cd $(CORDOVAPATH) ;\
	cordova build android

ios: $(CORDOVAPATH) mobile-create
	cd $(CORDOVAPATH) ;\
	cordova build ios

browser: $(CORDOVAPATH) mobile-create
	cd $(CORDOVAPATH) ;\
	cordova build browser

emulate-android: $(CORDOVAPATH) android
	cd $(CORDOVAPATH) ;\
	cordova emulate android

emulate-ios: $(CORDOVAPATH) ios
	cd $(CORDOVAPATH) ;\
	cordova emulate ios

run-android: $(CORDOVAPATH) android
	cd $(CORDOVAPATH) ;\
	cordova run --device android

run-browser: $(CORDOVAPATH) browser
	cd $(CORDOVAPATH) ;\
	cordova run browser

run-ios: $(CORDOVAPATH) ios
	cd $(CORDOVAPATH) ;\
	cordova run --device ios

mobile-clean:
	rm -rf $(CORDOVAPATH)
